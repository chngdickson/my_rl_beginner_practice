{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gym\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "import torch.nn.functional as F\n",
    "import numpy as np\n",
    "from tqdm import tqdm, trange\n",
    "import itertools\n",
    "import random\n",
    "import time\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from collections import deque\n",
    "import copy\n",
    "\n",
    "#Personal library\n",
    "import sys\n",
    "if \"../\" not in sys.path:\n",
    "  sys.path.append(\"../\") \n",
    "from lib import plotting\n"
   ]
  },
  {
   "attachments": {
    "15714f5f-8e8f-48d8-ae7c-2e8b0d3c57a6.png": {
     "image/png": "iVBORw0KGgoAAAANSUhEUgAAAoQAAAEbCAYAAABDb5VEAAAgAElEQVR4Aey9bYwcVXo2XM1+eNndYNgPj7VrYxwI4zWGMYmyY7485sfrmYWFAYXQsKCMcRI33mzoWUWiJ5vI2Y0e3LsvlpuA4pb54WaliPaLtG6kPMwAeuLeyDzTj0DyxKwe9yKkaedH3PwI0/sHN7+4X13Vc9ecrqnqruquz+77SK2qro/zcZ1Tda66v45GkgQBQUAQEAQEAUFAEBAEhhoBbahbL40XBAQBQUAQEAQEAUFAECAhhDIIBAFBQBAQBAQBQUAQGHIEhBAO+QCQ5gsCgoAgIAgIAoKAICCEUMaAICAICAKCgCAgCAgCQ46AEMIhHwDSfEFAEBAEBAFBQBAQBIQQyhgQBAQBQUAQEAQEAUFgyBEQQjjkA0CaLwgIAoKAICAICAKCgDNC2Fig1NgE5aqfCmKDgEBjgZ7eLf05CF0pbRAEBAFBQBAQBLxAwAEhbFI1l6LcQpHS6RJ95EWpkkeICLT3Z/2zEKsiRQsCgoAgIAgIAoJAJBDoTgjrJTqUXqAGXaHf5mcot9S0rHhjqUivLFyiK5ZnY3iwWaOFQomWGjGse6cqr/bnymfcn/Y9NnB9asZlUPvY3E75LwgIAoKAICAIdEGgCyFs0lL2AOWrqySwUabZVJE+MkuVGmVKQ6V83p5cdKlHBE+j7ffS3twSfRLB2vVWpfX9+eOni9ZS34HsUzNqwGMfTeTOD86HjLmJ8l8QEAQEAUFAEHCAQGdCWCtSKl2mNSFZk5YLM5StrChZQwW5j0aSJRo49WO9SNPbkvT6ZTMDVpofp13L/jxA2cpaD7eaM8B9au6vepEeuiFJr9fNJ+S/ICAICAKCgCAwPAh0JoROcIDU8IbNlCo3aEBok9LqOpWSG2k8d3G4JEgD3adK9+q7dSo9di2N56oDJAk2t1H+CwKCgCAgCAgCnRHoSAhhQ5admaBtmkbapgk6kD1D56slSiYS9FiprhPAlfIMfSkxQ2+qQqZ6hQqZJO0b1UjTNBoZn6Zn8mW63FWj3KTfnslRanJMv0/TRmhsMkX58uUeCVmTqgtFKhQKVCgtKZLOOpWLBf14saKIhhrnqYRrC0VaqLXU5PXSQ5TYkSEb08nO6EbsrG1/aho9duayUVvv+tSuP+s99qdRRWXHiz5+mLTRDJ2/MnifNApQsisICAKCgCAgCNgiYEsIf7d4lMY1jRLjKcoVilQq5ikzPULa6HdpBARCJ4RNqqQ3U2Ly1JodWrNKuX0J0jZN07MnilQqnaJcelIneONHO9tq1YoP6ddNpI7TqWKJSoUcHRpPkKZNUqFm24YOJ5pUzd5GCRBabYYWVlYn/FqBJvVjGmnTRUPVvVI+sEpEJyjP5dXytC8xRtk+GeGnjQY1GusdcjodX2muv75DYzue6tqfBiH0rk9rxWlKJDSaSOWU/rxK789Ty16RL/Qxf0AoHya1Ak0lMHbQx68a4xNkF3XStAk6wXWo5WlCG6PsQNnAdhwOclIQEAQEAUFAEGhDwIYQ1ii/7ypKjGdpUTUXpDqVZkZ0gqUTwmaVju/RaHNaIXoXX6A9igSxVdoKVdLXU2I020HS1iKSI6kyMW/T79UJWYJmelRJf3o+S7t1ArCNnllsiSgbC0z8WkTxrF5gkyqz21oEYuKfqcowNSv0dCJBU4Va7yrxZoVSupQ13d7+ZlnPe510qlGmmUSCEmNZuthVqsoV7bTt0J8HNuttNiSEnvVplXITGo2kziqSWSLSyZdGM2fbBlanync9hz4e0wn+Nnqm0tT7qbHAxK/Vx2Vdgg2ye33rA2HiBF1kTrraP1OnlruWJRcIAoKAICAICAKDiIA1IVwlYdPFy+tIEBMsnRA2yvRnmkYTJ5SJtF6ihyCZmc7R/EVVj9wNviZ9VKtS7XftUjFItvYkNJpZ6NFGsblEc99pSYrGjsIWsElLc9tXJYEgC6OUgWQIROiO1nXjxxWbwdXj16Uq9AkTiG5NMZ8PmxB26U+QKYMQetan9v0JyfPMvHeEkJpLlNmBvtRoLAtbwCYtZW5YlQyv9vFSkz5bJbu4rs1mcPX4dalFD1XZ5kEg/wUBQUAQEAQEgegiYEkIr1RSdG1iG6UxiZrr3ljQpVc6IYQXrqbR9Kv/pVzVpOVShiZYJTs6STOzOSrOV9slRcoda7tNqi+VdVXxs6kk7R8fMYhbz4SQFMnf5Cm61GxJy6AyfGampWoEoW0aKsYxOtqmOqxRYSpBWoy9qLv1J0i9QQg97dMO/eklIUQfs+RvskC1KzXKTyQoofZxvkZXDFMBswlAjQqTGiWSZwzV8tqYlD1BQBAQBAQBQWDwEbAhhGmdEGZ6IoSroDXrVK2UqJDL0MzExhaxmz5BHNJwPbR1Ks/dQZq2jabTOSqUFuhs5SLVqkVd4mhJCJtLlM8UqLaOtbbn/rvFlG73qGlJKi29StOQYE6coPOLGRoFcU2eoaVSsmVbts65oE5FEMLp+IbVuVLp3J/dCWEvfVqncmYPJSz6Ex8RnkoIieh3i4dos24akKQz51/VP1S0iX+mpUqGduB4skTnS8nWOBw1OwnVqQhCOC2EsP3JkX+CgCAgCAgCw4KAJSGkVWmZlcq4Wf25bpPXUhkvUFLTqM32qlGjarVmkgY26WLxMUokNtiGp2lWc7rt4fSq97LRAYgTl0isVxk3qrSQ2UfatnR379BGmVIbWyrF6fT0qmpxiZqNCh0awfFpSk+31MXb0mbV8Kr93cxCu22jUcEY7HTpz3aVsTd9iv6EanjacFZZxWlVAuk1IaRGmZ6+ttWHRh8fPU+fNiqU2ozjah+bVcMtieJVM/OmcRuDvpUqCgKCgCAgCAgCHiBgTQippSa1cipZSG1SnEqWKLMNdltrNneQRm228Mpl20PDOaTZpEajQexIC7XmlxIjhlNAq20IhN3yVE0aNoR1Kh34kqFKXkcITfm28lmh+QOaYlM2Qod05wPz8TWnBAPbVRvEHZml3m0IjczC2unQn0+31PKGyhj2eL30qQn3K5WnaYM2YjjytFqO/mx5kif7URmbymrlvULzT7UIoe5ZrI3QId2JyHx8zbnI6I1VG8QdGcU5yjgpO4KAICAICAKCwOAjYEMIiT49n9PtAFthZ0p6+JhscpS0TWO00Qg7s0KlJGyvFMlKc4myexKkbZikZ/SwMyUqFn5OM7dppI2mqeXtSbRcmNRVtPvZcaVepMd0z9oUHX8V5RX1cDXbRltxEHenCrS4GiqvFaqlQfVKlsZH2yWE6/Jd7cPGwqpKWLdtTBpxEy8XH1wNQ4JYiymjfkbX10t6vXSJqHEwfjtd+9OQ5PXWp8uFKZ2k72d70npRlx4nxlKUQwihdf15ivQQkPUSJUdnaP5sgdKT1xNiT+5Nl+jif1WocGiCNuuhj2bohOLujj4G6TPKMvr4sbUPBS1phBm6XGxJhXWiuClFLa9ypQ9RB9WOUjklu4KAICAICAKCwDAgYEsI0fjGUmktMLU2RtPpPJWX2gNT64TKbJNlBKZu2Q5+cXSCkukClS+veRBbEbePzuYpNbka+mUbAmEX6T/qdVpI7yFNG295A6u9cvEF2ueQENIqsdNJweRaXDpWj+N4YsYUIoVAjOfohkSvcRDVyoa/b9ufJjLUS5+uI4REZN+f45RAf8JGdZWMjU4fpYVqjWpLr1Jqm0ZfGnuIsgtVWq5XqZydoKvGc4b9qR0hRB+D2LX6eC2+JPqY404mZkxhjfQ+/lvapk2Sd7ERw+9rqYEgIAgIAoKAIOAGgY6E0DKjhkliptv4jVOu+qnl5Z0OQn1o6SzS6Sb1nAUhxOm+8zXKwJq+45SA56pxbMB2GhbSsR77FOr9mQWX4WRA4jZMUO4ifyw0aTE1QjekFTs/hM25IUUVvkTv4x7Ksuw69PEe0iYLxHGqLS+Tg4KAICAICAKCwAAj0D8hpBUqp3bQeHbJ1VqwzVqJZvfN0OvKynGucbYghJ7kyxWB+nvsmrWQLHx8kLZWhLCHPgXu6YkZev1yF5dvM3YghNcn6U0jGnmTltKjtC9/ce1KOMUohLDnstZyXNtDH+/eaCzFuHZC9gQBQUAQEAQEgeFBwANCSNSs5Wnq5kNUNib17gD+brFIpSU3gast8rQghJ7ku1rUSjlFN4/nqC0soUU1Yn3IkhC679OecbclhEqwcxMh7Lksi45aKR+i0T259hVkLK6TQ4KAICAICAKCwCAj4AkhJFqhSmacJvNr3saBgGZBCD0rt1ml/OQeylR6XCHFs4r4nJENIQysT3sghJ4hgj7eP04ZxWHFs7wlI0FAEBAEBAFBIEYIuCeEUWqcn4QwSu0c5LqESQgHGVdpmyAgCAgCgoAg4AIBIYQuwJJLfUBACKEPoEqWgoAgIAgIAoKAOwTiTQiVtiLIddxSHOscN4ylvoKAICAICAKCgCDQHYGBIYTpdJo++8ylh2t3fHy9Io51np2dpVptYIPw+NrfkrkgIAgIAoKAIBBVBAaCEJZKJT0Y8fKy4pkaVcRX6wVShQDKZ86ciXhN26u3fft2yuVy7QflnyAgCAgCgoAgIAjEGoGBIIQHDhzQydXx48dj0xkgVSCEMzMzsakziHcikaAbbrghdtLY2IAsFRUEBAFBQBAQBEJAIPaEEHZ4ICkgVyAqcUmQtOlLrGkaxcWWEOSV63z+/Pm4QC31FAQEAUFAEBAEBIEuCMSeEBYKBYMQgqwsLS11aXL4p1FHJrGoM9oQ9QTSymQQ2zhJNqOOrdRPEBAEBAFBQBAIG4HYE8Ldu3evIypRdy5RJW0gV2hD1OsM0qoSwmuvvTbssSvlCwKCgCAgCAgCgoBHCMSaELJjhpmoRJ1cgUypdcZ+1B1ibr/99nV1joNk06PnRLIRBAQBQUAQEAQGGoFYE0KEQDETK/w/depUZDvNLGnj+iMETVQTiLeq4uY6T09PR16yGVVMpV6CgCAgCAgCgkCUEIg1IVQdM5ikYAuiEtWEuql15f0oO8SArHI9zduoSzajOg6kXoJAPwi8++679Nprr9Hc3BzdeeedtHXrVuMZxf/Dhw/TyZMnCddJEgQEAUHACQKxJYQcAsVMUPh/FIMnW6m4ub7Yok1RTCCraj3V/TiF+okitlInQaAbAiB1IH733Xcf7dq1y/JZ3LlzJ+3fv5/27NlD11xzTds1Gzdu1Ekj8vj7v/97+ulPfxqbyAbdsJHzgoAg4B0CsSWEZscMlaRgP4rBkzn2oLmu/B9tipr9Iwf95jqat1GWbHr3mEhOgkDwCHz88ce6pE995rZs2aITP5jLvPzyyzQ/P0+XLl1a93vnnXf087gOJFHNA/uwY47iOzJ4lKVEQUAQYARiSQjNIVDMLzv8B1GJGrnqJGnjNqysrHDfRGLLQb+5flbbOIT6iQSYUglBwCECUPeqzmcggufOnVtH/KzIoN0xkEcQRFWCiAgHZ8+edVgruUwQEAQGGYFYEkI7xwwzWYlS8GSQJnP9rP5HySFGDfptVVc+FkXJ5iA/tNK2wUUA6uG77rqr7V0BEvf+++/3RQZVkgjpIdTL/Pxiiw+/qH2MDm4vS8sEgWgiEEtCaBUCRX258T6ISlRSNxU31xlf7FFJIN5W3sVcV95CkhE1aWxUMJR6CAJOELBSD0PVC/Kmkjkv90+fPk2QPKrP8QsvvOCkunKNICAIDCACsSOEdiFQ+KWmbkFUopJU9Y9aR6v9qDjEmIN+W9WVj0VJshmVPpd6CAJOEAAxg+MHP0sgabAP9JL8dcrLSo0sZiBOek6uEQQGC4HYEcJOIVD4hapuoxA82amKm+uNNoYtcevmEc115W2UQ/0M1iMrrRkkBKAiVqXwXquHOxFB9ZxZjYyPQVEhD9JIk7YIAt0RiB0hdOKYwSQF2ygET37ooYeMr3+1bnb7UXCIwcRkVz+741GRbHYf9nKFIBA+AlATc/xAOHq88cYbgUkFVTKo7h87dsx47mFX6C416aOzeZpNZShfrlGzWaVieoKu1TQamZih3PwyXXGXoVwtCAgCASIQK0LYLQSKHVEJM3iyGxW3Wv8zZ84EOAzWF2UX9Futo3lfwlisx1GOCAJ2CNx///0G+QpSRawSQKv9P/3TPzXq5UbDslKepbGNj1JxuUX7GgsHaMdknirLVSrnHqVrExspWazRJ3aAyHFBQBAIFYFYEUInIVDMJAX/wwyeDJKkqoSs6md1LEyHmG5Bv63qi2NRkGyG+jRJ4YKAQwSy2axBug4ePBi6ZFAlhvBoRqBrPNOwfXYUraG5RNndCUrMLNDKZy0QlvNTNJmvUuvvCi08PULahhla4AscYiWXCQKCQDAIxIoQ/sM//ANZ/ZigWJ3DMTdfuV7DjrKt6sVex9u2bbM8j3vCSuVy2bZOExMT+kSBrVW7EKpGkiAgCNgjALtBfmeBeEGLoBKyKOwjZiE7usCesNtz3az+nHYnNBrLVg0JIAjhVKG2SgiJrlRmaUTbQIcWFcVxfYkqF+WdYT9a5IwgEBwCsSKEdrCwBC5sRwy7+lkdRzBYTAp79+61Oh3ZYyCBqPeRI0ciW0epmCAQVQRgN3jrrbfqzxDsBv0MK9MvsTTbE3Z6v356Pk2bExqN5+wJIdXyNKFplJxvBd9v1iqUT462kcao9pvUSxAYBgSEEIbUy0IIQwJeihUEQkQgk8noZBChZbAaSb+kze/7H3nkEWNlk46q41qBphIJui5VoU8UlbEqIWxWczSujVH2/JqEcLkwTQ8qUsQQu0aKFgSGHgEhhCENASGEIQEvxQoCISKwa9cuPRh0lJxIOpFK2BP+zd/8jU5iO5ux1Kn4UIK00TQtrtoImlXGy4Up0iZydHGND5IQwhAHoxQtCJgQEEJoAiSov0IIg0JayhEEooMAzC0gdetEwqJ4DvaEsBvulJq1IiWv1WhfdpFgFagSQpw7MDZJuaVmWxZCCNvgkD+CQKgICCEMCX4hhCEBL8UKAgEgYOWE8dZbb+mStueffz52hPD73/++Xvdu0DVrZcqnk5Q8lKVscpTGZnJ0IpumQ+kclarrnUeEEHZDVM4LAsEhIIQwOKzbShJC2AaH/BEEBgoBq4D4c3NzOqk6d+5c7Ajhc889p9cdEQicpSYtZe+lScXJxOo+IYRWqMgxQSAcBIQQhoM7CSEMCXgpVhAIAAGohu+++256/fXXjdLuvPNO3X4wimFmuqmp3377bT2eKuwI4W38wgsv6OFyjMZZ7KgqY4vT+iEhhHbIyHFBIHgEhBAGj7leohDCkICXYgWBABAAIeTf5s2b6ac//an+H/aDcSSEIIwIUg07Ql4gAP/RLrvUjRAi7Exh5noaTRVp6XK7baFdnnJcEBAE/ENACKF/2HbMWQhhR3jkpCAQawSYDJq3WLu4WCy2qYzhyRvleIQsPbzuuut0Qohg+xy0Gu3DCkVWquRuhDDWHSyVFwQGEAEhhCF1qhDCkICXYgWBABAwE0Hzf8QhRHB3BH+OAxlcXFzUVcbpdFpXGcNpZnZ21pCCon2QHFo50wQAtxQhCAgCHiAghNADEHvJQghhL6jJPYJAPBAwE0Dzf6xSAkLI0reob1955RWdEJqXAYVkEEvbcfugRsb67ZIEAUEgfggIIQypz4QQhgS8FCsI+IgAnEggOfvc5z5nkCQmS1C5Yh/rl8dBKqiSVF5hZWlpyRI9kECQQW4rSGLHlU0sc5GDgoAgECYCQghDQl8IYUjAS7GCgIcIgCDB43bfvn0GGQIpgvMFkyNssWY5/4+TZJBJ4T333KPXvxN0UBfPzMwY7UR7QY5FjdwJNTknCEQHASGEIfWFEMKQgJdiBYE+EAC5gRQQ9nJwpmCSBycLxB6EShVexIg1mEgk6Oqrr6ZNmzbp+xzcOY4rlbCHsRPooEaGFJSxwb1QOUsSBASBaCMghDCk/hFCGBLwUqwg4BIBOyng2NgYwcnCysMWx0ZGRgxSBHJ05swZ2rlzp/5jyVsctnAoQf3RVjcJMQtVb2RIUUGWJQkCgkA0ERBCGFK/CCEMCXgpVhDogoBTKaA5G5AdxOVTJYcsJcN2ZWWFpqamdHIVByLIdYR0D/U/deqUucld/wOThx56qI0YgyiKGrkrdHKBIBA4AkIIA4e8VaAQwpCAl2IFAQsEepECQj0MqRf/VPJn3ocKFSt8/OQnP9HJUZzsCB988EG9znhn9ZpKpVIbUQZphsRUkiAgCEQHASGEIfWFEMKQgJdiBQEiXUIFyZeVLSAcI0D2nEixzE4UZiJ444036mSK1zaGdAzXIOxMHNY0fvHFF3X7R9S5H0KIQQc8uf2ME6SHokaWR1IQiAYCQghD6gchhCEBL8UOLQKQAkKlq8bNAzGBLSCICs73km666Sad5DHJUbfsXYz8ISFEGRyeBfaErJaN4hbrF3NdgRHq70UCAVS9sFFGpyXwvChT8hAEBIHuCAgh7I6RL1cIIfQFVslUEDAQgESKpYBMbEDW4OjgRgpoZNhhhyWBKhnEPogUtqrjCaSPfN3BgwcjubYxltNj4gy8/JDiAQfV6QRq5H6lkB26SE4JAoJAFwSEEHYByK/TQgj9QlbyHWYE/JICOsG0k6TQfL+qaj558mTkJIVPPvmkQVr9tPUDaYf3MhNkbKHGhwOOJEFAEAgWASGEweJtlCaE0IBCdgSBnhEIUgropJIsEVQJzq5du9bdinqzBA72hFFauQR2g1x/Xrt4XQM8PgAir2IHiS4CfksSBASB4BAQQhgc1m0lCSFsg0P+CAKOEbCTAsIurR9bQMcVsLmQHSaef/553UbuS1/6kk6sIA20SmgHq0xhTwi1bNi2hLAb5CX2QNCCTlgCjzEBKQVpBk5Bpd8t5mhS00jTxunZUpU+oQYtFdO0O4Fj03T0zHlq6JVZoaUCgpPP0OlaM6jqSTmCgK8ICCH0FV77zIUQ2mMjZwQBFQEQJdgCwiNVtQVEKBeQLYQ0gcQtzATSgpVJQGI4gDPqBFIFkmOXYEfH94EUnj59OjRSePToUQNfkLLl5WW7avt6HLhBbcxSSmyDWwKvSUvZcUpo03S6zs1coXJqG2mjGTp/Zc2xplnNUSpfpSt8mWwFgZgjIIQwpA4UQhgS8FJsLBD49a9/rZMAVqsyOYAUEAQrSKmRE8B4LWOQVNX+DeSmm0OGmfxgaTs4dQQlLYRUkL2hGWcQ1bATHHHUIN/4GAikXrU8TSUStL94mZj+XanM0oh2PT2zyPSvSdXcM3S6zleEjZaULwj0j4AQwv4x7CkHIYQ9wSY3DSgCcZAC2kEPgspECtLKXpKZ/MCu0O/g1SCdP/zhD426ow0g3GFJBu1wgypeVSODfPtbxzoVH0qQNnGClnW+B/I3RWOaRiOpsy2VcbNC2fQCfSR80K7b5HgMERBCGFKnCSEMCXgpNjIIxE0KaAUcJIBsc4fg0/0mM/mBGrlYLHouLXzppZcM9TCIICSbfnoT94sLPhiALxNvbBG7EPj7kRoLUFmP0/GLTaJGmeZmS1QpTlMiMUNvNogaC3M0V24YEkQ/6iB5CgJBIyCEMGjEV8sTQhgS8AEV26yVqZDe3ZrARlNUXGpQs7ZA2XGNRpLH6fWKPxNZQM3rqZg4SwHtGszr9EKCpaqK7a53ctyK/ECNfOHChb6JoZV6GCTUL2LlpL1uroEEFuSViSFUyr1KZTuW26hQeptGY9lFulhMUbbyCVH9TXoskaBksULFdJaWxJekI4RyMn4ICCEMqc+EEIYEfJDFNmtUmNYooSXpdRio19+k2VSBqmyGFGRdQirLTgoIaU8UbQHdwAQiwsSkk+OImzzVa6FGZvID+znY+c3NzRGke5DmObExxHVwFnnggQfa7PFQb6iHQT7jlkBe2aOb8fd+CTw4l4xRQhunyZnCquoYziWbSdvwXZo+cVGcSeI2cKS+XREQQtgVIn8uEELoD66Ry7VWpIcSCRpNFaiQTtFpH+ff1157jX70ox9RNpvVY7ghjhv/EFsuiLhuIBgohyVnPGGD2MD71hdpTgidDlLCDg8gVn4mkB+UwViqW9RBJYogfwgqrcb04+txDPngNwj9gLHGzjxoI0izl0vgNat52pcYoZSiGoZzyTZtkk61jAvbu72+RJWLwyf5bwdB/sUZASGEIfWeEMKQgA+h2OXCQ/pkPn7cX6kCExQmAFZbP5r/+uuv6x7B5vJZChhHKVQ3nBAGhfH118GhvSbAEmQOJBH4WhE/1AsEHOdxnbpsXntug/EPnsdqOCKMQ7xf+091KmWLdElVDTerdCK7QB+ZMm/WKpRPjtJUIZxQPabqyF9BoCcEhBD2BFv/Nwkh7B/D2ORQL1FS0ygxlqGyjwIEc4gWJizYjoyM6ATGC8yGRQpohxUIFscOBOH67LPwXU0RhgdEEXWLiz2gHb69HEebw14Cb7kwTdNCCHvpPrknIggIIQypI4QQhgR84MWuUHnuacq/mqHxhEZjmQqt+MQfVPWZSgaxz5KkXps/jFJAO6yYeANTSdFCAMSYxzrGPSSHQZhKAAUhhNEaC1Ib9wgIIXSPmSd3CCH0BMbIZ3J5IUOpQo2uUIMqc7eTpo1RZnFlfb09sD/ykhAOuxRwfQe1jkAiyGR70FWxdhjE4TicfNTYhUEsgSeEMA4jQ+rYCYFIE0IYCGOS6/bjF3S366J0nr9i8dKKUr261YW9HrHtdi2fh4NB1FaW6PRQeHauXqJDyfyaV3GjQpmx9apjr+yPgDc/C+Ytjze7tkHlZiUFxPiELRrstAbRFtAOD6vjaD+rinl5Oqvr5Fg0EMCYNq8C4+cSeEIIo9HvUoveEYg0IeSXr3lyk/9YaD1eP0hWhik1loqU2Qfv4hJd5DAz9Qrl9yMMjUba5FE6c37NoNCLycQtIQRJhzrNfB/IIwiPSMDaRyzj5GXMwfYS5J8fCGAcqw5PUCP7sQSeF8+wH+2XPAUBpwjEghBCvYqH2im1YlEAACAASURBVO73r//6r4Sf3fmoHscKBFGtW6d6uan3zMyMTl6HjRA6fQD5Oi8mE4ScgeR2fHzcCC/CYUbY7g3lIZad6pUpUkDuBfutF8vT2ecuZ4JAAO8gjHX+mAbBP3/+vGdFe/EMe1YZyUgQ6AGBWBDCKHjx9YCt3EJkBJAVQth5OHgxmQBjnuzMW1VlfPfdd7ddB7II1RqkhQgkPYxeqp16B3h4uTxdp7LknL8IQO0PEwj1+fBiCTyYfRRmrqfR1Kv0H3U1To2/7ZHcBQEvERBC6CWaktc6BJikCCFcB03bAS8IYVuGHf5AwssT4ujoqLEaBh/DFio22H5ishx2kshBtiFdCjLmYIculFN9IoAQPWwPzeN9EIJ19wmL3D7kCAghHPIB4HfzhRA6QzhIQogaqTHbYEsIKRjMBNBfUPOzRFEliVAzQ80GkggHlGFwMgFJYAz8WJ7O2ehwdxXWK5bUHQGMeX4/cR9jfA/DuO6OjlwxjAgIIRzGXg+wzfzCxVaSPQJBE0JMhmxPBZWxnVkGSCKIEEii1fJpTBLhvfnKK68MlDc5MNq+fbtOCNH2KKWPP/6YQPx+8Ytf6Dahd955J23dutUgryA4u3btoscff1y/BtfiHknrEQABZIch4IYxjY8eSYLAsCEghHDYejzg9goh7A54WPZHkH6xJ78bwg6JIrw0IWW0IomYVDHBgiSyXWJ3FKJ3hSpF9dL5oJeWfvjhh3T48GEC8WMiz1ItbK+55hras2cPHTx4UMf9kUceoZ07d7YRRFwH0njffffRyZMne6nGQN/j3xJ4Aw2bNG6AEBBCOECdGcWmCCGMYq+s1Ynt4yAV6UdVhntBMNHfIIlWpMXsvLJWi+jtQTLKhAttspOg+l1zSPV+8IMfGHVRid+RI0fo9OnT9P7779OlS5dsf7gG15pJIvoIJBNkU1ILAUiF1Q8BjAE8IysrFsHkBTRBYMAQEEI4YB0ateYIIYxaj7TXB0SOyRukel4SH+TNdonw7FSN+JlsRdV55fbbsaqMpte5HbFg/oEIIjwQ9w3I3DvvvGNL+joRQqtzx44d0yWK3A+QGr722mvBNC4GpUAKrtrR4oMpqCXwYgCPVHFAERBCOKAdG5VmCSGMSk/Y1wM2gqw6PnXqlP2FHpyBBEYlieqky+QEJBHkNCznFR6zqA9ioAaZ/CaCZnIIkgk1MySPaC9UyiCiaDe8y4c94dlgUg58IOXG+JUkCAwiAkIIB7FXI9QmnlyxlRRdBNioHpIQkLagEyZZdl6xIomoF5NEP51XINVkYgrVoZcSUyeYwgkE5XstETQTQav/kBru37/faD/qgT4Z9oTnIcgl8IYdb2l/eAgIIQwP+6EoWQhhPLpZJUKwmQqaCFmh5MZ5BSTRC4nWvffeqxMiSIWCJsb5fD40MqgSREgN4aDCxDhshxqrsRHGMXy0BLEEXhhtkzIFASAghFDGga8ICCH0FV5PM+e+AhEIWlXqtCEgiX45r6iq8zNnzjitkifXvfvuu8ZygpDSqQQtjH04qrCqFCQoaHLsCag+ZYLnhLHBswLJtZBmn8CWbANFQAhhoHAPX2FMMrCVFH0EYCOFSS5OJADSTSaJds4raBckn3Yrr4DwQC2NtiOPfiWkqI/TBLtBxAxE2Vu2bKELFy6ETghBQuGdjDrhZy81btJHZ/M0m8pQvlyjZrNKxdl9tFHTaGRihnILNbriFIgYXYcx58cSeDGCQKo6gAgIIRzATo1Sk4QQRqk3utcFajEmAWHY0HWvobMrQPDQFow/O5II0sskcXx8XG83JD+Y7PtJIFMgl06lRmpYmfn5+UiQQZZKIpYkj4fjx4+vg2WlnKbd1z5Kp2ut9XsbCzP0nck8/Z9alcq5R2mjtpGSry4PJCkEGCD+qvc8xpSbj4F1gMoBQSBEBIQQhgj+MBQthDB+vazGYYuq6rhXVLs5r1x99dWG8wqW54OK2m1SHXS63Q+7QfbwRqxAJmJR2t5xxx06KQTJbWtPc4myYxolZuaJ3ZCW85M0lb+4CtkKLaQ2UWLDDL3JF7gFMwbX4+OD33NMnjEG+v2wiEHTpYoDhoAQwgHr0Kg1h1+U2EqKBwKY4CDpwOQGVesgJ7R18+bNelu//e1vd115pZuHM4jcVVddZUjVOkkKERCabdFgNwgCESUiyHWBPSGHpcF4YHV6s/pzGtM0Gjt60ZAAghB+r7BsDJkrlTRtTmygQ5UmfWYcHcwd9B9/DODZQd/LEniD2deD2iohhIPasxFplxDCiHSEy2qoqmP0IZMAl9lE/nJVJapKv7CPpczQdjcrr1gt5bdOsraKCtvogQx2W22EyVlYW9T11ltv1Ykur9rx6flZGtE0Gj9uTwiplqd9iQQlFxoDTwh5sMsSeIyEbOOGgBDCuPVYzOorhDBmHaZUVzWaX15ek/ool8R6F6SX1bUYp90SJEDsvALip9qOsarwK1/5iiEd5GMsLTLbFCIANM6dO3cukpJBM/l88cUX9foaZgS1Ak1qGl2XWrSVEDarOdqTGKPsUoMuFmdp6uYNNDqdodKqzWE3zON6HpJn1fQC/Qx7VSbTcW2X1HuwERBCONj9G3rrhBCG3gU9VwCTGqRbmMygChu0xB7VIHa9SkCBkeq88tWvftWSEDIphF0i4iXivjvvvFNXxUZVVWwmhG+//bbetjXyXKfitEaJ0TRVVm0EzSrj5cIkJSZy9B//UaTiUoOoWadKboq2JUtUH3QdMpFuc6kGWsfzJEvgDdqbZHDaI4RwcPoyki0RQhjJbnFcKai/QGbwG6RVK3hcol0gdF4ltglkzGB7x8STj83MzOjFgRwgAHRcCCEIItoAyTGnZq1Ij12XoH3ZCq0QkUoIcW7mtknKnb9CjaoSfqZeouREli4OYjwaBsa0xbOjjg2MCS/Hnak4+SsI9ISAEMKeYJObnCLAE++aVMHpnXJdVBBguzgQmEFQHYOAsaqYyZlXWPOkDyIIqSr/B5HCPp4DSCPhUII6wIbRLImL8v977rlHdzhS8WrWypRPJyl5KEvZ5CiNzeToRDZNh9I5KlUt3IvrRZqZGQ4JoYoTpMKyBJ6KiOxHDQEhhFHrkQGrjxDC+HcoCBSrjmEHFffEnqAgaF7bdH3ta1/TpWhWRBCEgBOcNEAIX3755VgRwsOHD+vtU9vCbSJq0lJ2H03l1pxM1s6t7dVLc5RfasUtXDsa3N7vFnM0lUiQpo3Ts2dQ1wYtFWd1j2lNm6ZsaWk1jM4KLRUO0LZtM1Rc9k6cCckge/HjQwHPFiTxkgSBsBEQQhh2Dwx4+UIIB6ODofJilWecA+/63Q6WpqoSQZAnOI6AiN599906Cc1kMjqeWDc4yhJBc93gWAIia6fuVFXGliO/UaFTxarhhGJ5je8HQVyxVvM0FS+zIeMKlQ9dT4nRDKlcFU4xh/JV+sSHOuHdqH44YHyYHY98KFayFARsERBCaAuNnPACASGEXqAYjTzYOB4SDa8la0G0EMTsuuuu04kYiJsfCflCXYxxj/JAQG+66SaDTIMown7sj//4j/VjZsIV9f9wLAEhRLusUmdCWKdKqUwfWd0Y9LFaXveQ3v/qfxklt2ImXk/PGDETm1TNpel03bjE8x1I31VvfowPxC60lsB6XrxkKAi0ISCEsA0O+eM1AkIIvUY0vPwQmw9kAJMWQmrELUHdzZI7v2wh77vvPp0Aghh+/vOfbyOCKBs/eDVPTU3p+1EngOb6/epXv9LHgJ2K054QNqm6sEC/Za15s0aVi/wnjJG06iE98c/UWqgQ5G+Sdic0GkmVaQWCw2aFsrMLgRBYWQIvjDEgZZoREEJoRkT+e4qAEEJP4Qw9M+5PEBs7tWHolbSoAOrKhMxOumVxm+tDt912m1EOl8dbrISCfZBpVhnDltBMuqL8/7nnntPboAbxdgJSYyFNOxItQtzCI0klQ13rJAfvr8G6y4nEOOWqnxI1ypRJl6hSnCZNm6GFlc+osZChuXJwpBVSQfX5Ak5QI0OKKEkQCAIBIYRBoDzEZfALDtthSPC4LKR3t0jBaEqPvdasLVB2XKOR5HF6nQO2xRQMTFockBmG8b3G7wuy+ajz9u3b9T6B2tvPtGvXrlbfr0oDmQyyuh3/IZ186623dElbVNcvtiOlTzzxhN4+PzEMLO9GhWZvSNBYtkL/t5iibOUKUf1NSmoaJV9dpGI6S0ve+ZI4bhYIIDs+YbzAREOWwHMMn1zYBwJCCPsAT27tjsCwEUIdkWaNCgjYqyXpddgf1d+k2VSBqgFNLps2bdLVlZhI+Idj2PciQdrGquM4EH11xQi/jfZHR0ctCeFdd92lH4cqGST6448/1jF85JFHYhWHEB8BaANUxgihgiDLCLQdzwTnEny8jdPkTGFVdQznkhFKbPguTa9zJmkGutoKMMYzyx8VwN5YJSaegEutI46AEMKId1DcqzeUhBCdVivSQ4kEjaYKVEin6HSAWp8NGzYYkwhPJrykmlfjyW4NYK/y9yofqDYZA4xFvyWaqtcolwvy/OUvf1mvh2p7t3Xr1lgFpsZ6y2gTYjdC7c4fBdxOOMvEjSQ2q3ma0EYodRZhtVsJziU3JCapYHpmm9XgV1uBdFv9oAHWsgQe95RsvUZACKHXiMYwP3zh88/r6g8tIcSqDYWWE8P48c5x2bzGXJUq8GTNKkuvysJExeQHRMBvotVrvW+//XadxEDNjTr7neBhzJjz9qqrrtKPAS81fe9739OPQ0Vop6KN0nE4lKBNx48fN5oBaTHIIUgijzFuN7bRJ4l1KmWLdEkNi9is0onsemeSMFdbwYeNii+ecVkCzxiGsuMRAkIIPQIyTtlgAoKER7VTUV/iUE3gS98Lp4FhJoSEJbo0jRJjGQrQNr1NzcT9ypMJxqkX/Yp84BnJUiKVJETlWeCxBwyCUrV94QtfWEcIP/e5z+nHzJ7Z2WxWP/7GG2/EghCyI0w3LONPEh2M4JBWWwH55g8xJtxePc8OWt31EphCIDTRL37xC5qbm9P333333a73yQXRQEAIYTT6IZBa4CvTvHQSXiogC7ALUl80TCRAGvt54fCkjO1wpRUqzz1N+VczNJ7QaCxTaYWyCACEThJCqCxB4kD6vQgwzaFcUGaUvCFRF8YB0qsgJJhPPfXUOjLIzxG2Bw8ebOt9OJbg+PPPPx8LQvjAAw/o9e0Fy0EjiWGutgJJt/k9jg/8bhJw1VyhbSC6/MOk7+TJkzrpQ6ilO++8s+PYxziHiQSuw2o3QhZdgh7Q5UIIAwI67GLMBsqYJK2IHiZSEAVIM1SC2CuhG1ZCeHkhQ6lCTV8WqzIHteUYZRbX7JT8HA9MhFQywhJCsz0Srt2zZ48uLQb5d/vDvSwBQ15u7/fresYAdcPqIH6Vw/lu3ry564SI/gARVyWFOAYMo6QatqoL7Ac5qHcvhNBqvMeWJEZitZWWpB/jiZ9zjPlXXnnFCmpdrX/99ddbnnNyEGtv33///UZZXCZvd+7cqY9jEFP8EE4Jv2PHjun/9+/fr5+3MqlAHiCLWCcbH5huQxo5qb9c4wwBIYTOcIr1VerXJIhgty9JbizIISY8fuh7MWYeSkJYL9GhZH7Nq7hRocxYcKrjHTt2EJxIQALVH/oR6Wc/+1kb2cdxTCzwhIWk2O3vxhtvNMbILbfc4vp+t+V1u1719A2iPioZNAejxgQIOzp+htAf6iovfByTqBURi8qxvXv36m3AR6JXhJDfM+o2+iQxQqutrAKHd6z68Y53tkqqsM8fSLjWbf9B/cv5YzxjrCJcEghfr0sv4l6s44284GmPjyJ+FrCVMDvqUxHcvhDC4LAOpSRWY+GB7lVFCLsVfqFgcnNKKNHgYSOEjaUiZfbBu7hEFznMTL1C+f0IQ6ORNnmUzpyHc4N/ISxUEs8vWZYQqoPQLDUGKTxz5ox6ieN9LhPjxM34cFyAwwtRNo9VEEe3k5/DYozLzB9bPHECd2Cu/lclg5yBKrGNqi0h2w6iTV6pHbn9TrbRIYlRW21lDT18vLP5Bj/zePfieQDh4mMYj+oHyVoO6/cgFVRVwVu2bNFJoF8fKfPz8wRJI9cVc41KbNfXUI54jYAQQq8RjVB+PFnhJdBv/DU8mDy54cXjdKIdNkLotPv9DGGBSRu4qz/YqeG/OWHC4D7iFzHIndul3TA++P6gbPbMbcH/hx9+WK8HxiomST8TP19oN7eZnxGQUcYDxzoRKZYgYsKFatavCbeXfHmpOm6jn3i6yTsMkhjF1VbMmOGjX1Ujg2CZ1bSnTp0y37buvyoVRN/D/jWIsYkyUBY/O9havbfWVVgOeIKAEEJPYIxeJpDq4WHCZOTVVxbyYa9SK2mHFQpMNuShbkcnzBAW7TVp/QN5UkkMxg7UNm6kfdzXuLebJ6pVHfo9BpLA49Nvr2eoutBO/EAGOX3ta18zjuMcpITdPsaAPRNJ2Frhfy/kzet7MDmztNWs6ub2RmkbBkmMUvu5LupH3he/+MW28Ygx2cmWEFJBDqKOa/GRUiwWAx+PUCnDrhB1wA8fTd2eI26/bHtHQAhh79hF9k6VuPWqArRrHCQd/JA6UUEzSRBCaIcoVjIp0sxMieqfdbgmoFPoU16aDv0MaYOTfubqsbQL97khk3x/r1uUxZIRkBenEuxeysMzwMTTTJT+6I/+yHg+3NjrAmPOMyrL2fEHgpcflb3g3c89w0wS+SOD39fq1kpinc/njQ8TXBuUVNDuQ8ZKWii2hf08Dd3vFULYHaPYXcGTMqR4fkyMbPcE6UE3exQhhN2HT5ghLKxqp0oYeBKBGtmJChYTMN/j1/izqrMqsfNKIm5VjvpBBDJoJr1MoiChd5vUNsCeym6iDOK4ajfoRMXotq1hXj8MJFF19OLnUd1CSshzA8LIIHQMn/fbVtDt+IW0EHXi+mF+8/MZD3Nshl22EMKwe8Dj8pmAQcrjZ2IDZmw7Ja6PSAhtUIpICAur2oEAsrMIv4zRj2YSZL6XPxhwTxBqHlUi7uc4M0sGrXCYnp7uaC9oxkr9j/xAMuHRC9s9txNnv9dDInP06FG9DtzfbBup1nMQ9weJJKofLdyPVlsQfZDBW2+91SBbMFm4cOFC4GOv29g1SwshjAji3TKIY71Tm4QQdkInZucwgbPayW8bLpTFLxm8TO2SEEI7ZHA8eiEsrGoLdSarY9Hn2O9kigBiw9fja97vxBJxfAR1k1j3Whd1kjWridU8rUiier7bPsgtk/CgiCHI55NPPmk8z2gfnlsn5L9be+J8Pm4kkccePtLRdyDz3I9WW4xpVTKIQNPdiFnY5yEtZFU4nntuc5zHWZTqLoQwSr3RZ114Ignqqx4vGSYIrH4wN4GvwVaSikB0Q1ioteR9vHi5L/lDAOPNzhsZJJKvw31244Pz73Wr1qnTh0mv+eM+J5LBfvK3uhdlMqn2gxiyNJDLwCSL94ao4qx6Y+0Yk0RIglVbWx7rICnwPsc6w1gfPsiEZy6ZTDoy7UC9sFoI1xsBpMMme07LR/xCrjew9uvdEmTfRaUsIYRR6Yk+64EXFR4SvNiD+mpCOeyFaGdnxBM2tpLWEIhDCIu12q7tQTLMdnL8UrbzRsakiWswRuyI41rO7vdQF149A2X5kZxKBv0oG3mqxBCSO0jyMJFDQru4uOh4Ese1v/zlL/V7Ocg0+gakBs9uUO8Mv3AKK1/ghncv3m9RIIl4/+N560bsIWljbRLiFDolY1G5TrW39TuiQFhjK4xyhRCGgboPZW7fvl2ffIN+OJjwQdJglfi8EEIrdOJ7DNIIVUKC/scxNakfDJAmep1YIo5J0A9VMSZ6njSD/NCywkklhkzEeQuCpxLFt99+u4388UcbX48tpIFonyTvEQiLJILkcR+jz+1s7N59911D7Yo4hZ1sBv/zwjv0b/PzBCen/n7/Ru+8f8lT4jk5OWm0V8ayN+NYCKE3OIaaCyYLTFyYoMMQnzMxQD3MSQihGZHB+Y+Jj/uXJyKQNEjuOGFM8LlePG85H/NWzddq3Jmvd/sfEhYmUiCDdpOr23z7vZ7JBrCE8w6ktagfY2y1xTW4Fjh1kxz1Wz+53xoB7jc8L35JEm+/HWumt+L2YWslKVSdSBCwutvSc7995xjtT6zlqebvdn//i+96Sghh9sArm6CtfmghrHtzcI8KIYx53+JFw3ZAZglNUE3DRANCinqYCSkTBmwlDSYCIIAsreNJAv2NsYnEKma8tL2Q5CFfVhUjb68TSBPnD7IVBxLFhANEEdgL+fN6VHifH/cZ+ssLkmheR5tJofoxoy5F5zTg9Lu/fIJuZKJ5zQP04rnfOid2H7xHb7x8mMY1jfb8j//l/L5LzqSJkFryB5E4mfQ/RoUQ9o9hqDngZYIH34+J0U3DmJSavZu5fthKGmwE8EHC4wBjEvuwdQNhZGlbtzBFThDikEeYCLyWCkRVMugEF7km/gj0ShJVm0D+KOMtSwpTqZQhQYQNnnN7wA9o/shEay12TaPE7RkquVT/vvvyI3T74TfoA4dEz3ndLpE4mXg37oUQeodl4DmpkhIzEQu6Mkz8YJukJj4uhFBFZXD3MSa5z3lCgvRQjU3YjyQbtkKcL8oxS6T7QTaOksF+2iv3xgMBJyTx5ptvNp4Lfj7U7e/93u8Z5xFr0A3hal37Hr385Fpw6G8+8hKdqzmT4uH+/7xwmg4fPE3v+0AIkT8I7i233KK3Mey5MB6jyrqWQgitcYnFUZ54IR30cmLspfGQAvELCC8wTlxHbCUNDwIYD6wq5nExMjKijxFIDntRHWNcsfMUPG69TCIZ9BJNyctvBMwkcXR01Hj/8vNmtUUQ6k5OJB2J4gfzdGTPmj3hHUfOuCB479H/d3LexfXOySbX+Wc/+5mOgV3EC7/7ZBDyH2pCiEnr9ddf178uVBsoiNjxH18diCelEpyodLpKwKJi4wQ7GLyEVOcBIYThjJhmtUizUztI2zROydw8XWqGUw9IA9npSJ2gIDF0m1Qpo2oX5TYf8/WqZBB1jMrzZK6n/BcE7BBQ5y/1Ofv2t7/dthIJQsxg7mAS5XZbe+dl+tNNiVXyuYWefPk9qvkk9XNbt9/85jd6vUT4YDdKuh8fOkIIcoe4aaqtk/oAWe2DIL7yyivd0QzwCgTkRF3NKtoAq7CuKEz+ZucSIYTrYPL/QLNCmbG1L3mMk6lCjT7zv2TbEjAO2PibnzEYtTtNIGl8H4ihVxJxvA94pRPkL9IFpz0i10UJATMhvOuuu9rGNT87P/nJT3omg0zQ3i9ldCeRVp4TdOR/ftB3npx3v1vUCYIJSb0hMDSEEF9FTKL44cAEhcGDyUqNY8TieEi6VLUXHrooSA9QB46P5rVRfW/DaO0uJtpsxyGEcA2bwPYuvqC8sFeJYbJE9TAZIZEumbj//vsNYofnEOPDiQSeQ2pA2ujkeidYIx/OF3XxI3yNk3rINYJAvwgwIYQphfnDC8f4vdwv4Wrd/wH975ceoY0cjmbLE/TKe+5VvN7Upb3ce+65RyfC/eI5rPcPPCG0IoJul2hS1V6QFoZNwvjhx2TqlaTEqweACSBLLvk/tpICQqD+Jv0Zh4lY3e7ILNEnIRNCbj0+tPiDBkQMk1WntZF5DOFa/tDgvHrdggyKZLBX9OS+qCHw7LPPtn1ogRSq89zWrVv1mH3ekbD3qZT5w7UyJ56jN37bTs68K8t5vt///vf1OkWtf+JSn4EmhPjiB4HDRIIfHhAQxF4SJhAOdxFmvCOQU7QFD7xXkpJe8LC7B/gy3riGJ3MhhHaI+XG8SbViinbwF/zEUSqv+fn4UaDrPM3SeowZfOiYP7YwnvgZhjTfiw8gkQy67i65IeII8HsW0kDMe+a5Ac/Xnj17vFXtfvAOvfTABiMczY0HX6H3QrYnzGQy+vzT6zwf8W72vXoDSQhV8oYHoR8iqPYA8sUDx5OXF5OTmn+3fZTPXpZRtnVijKCG5xeVEMJuvev9+U8bNapW6xQxLqg3FGOZVVvf+MY3jI8IPFvq2sj33nuvfs6rDyCUK5JB78ea5BhdBLBUHZ4rd7EHnUnl9HAyt7CTiUaT/+Pf6LchksLnnntOb6tqAhbdnvG2ZujjP/mTP+kr04EjhBgI6ioDkKh5mVSJRSc1l5dlcl7sZRmFMDNcJ6stk0DUl/eFEFohNdzH2AkJL7K/+qu/avNGhhr5r//6rw2i6MUHEMig2AwO95gbxta/9dZb+nP0/PPPeyshXCV+H/zbMfp/VrVwE8/Nh0oIf/WrX+nmKGqki2Hpc7xH8YNGpdf2DxQhhGSBQQFpMqufvBoYEMkz8Jhkgkiql2UUHFs6tRmkHDZikMQIIeyElJxjMwy8xPCxhfHCkkN+lsfHxz1RFauSQXysSBIEhgGBubk5fb5yulSde9u/9+jlBzbSlidOhq4yrlQq+tyD90jQGrywxxK/L3nbCzEcGEKo2iQFIY1i72MvQ2DYDSiQTlYVB9E2u3q4Oc5OA2zTEZd6u2mjXNs/AiCBTABBDvESx7FvfetbxscdXnAYP/18fD311FNGfjAhGbbJov+ekhziisDTTz+tj/2eA1J3VAF/QGePTdHWPf9AZy44UzO7J5zu8sXcE2UtGgQ6v/71rzv+EB8ZAq5uP9hd84+JoHmLD2GnCwEMBCFUX/ZBhY7ApMWkx8sguVYvHSa7sM2Ly0TGkh8OVi2E0Kpn5RgQUL2OYYbBEma82JgsYr+bN7Idmvz8IA+QQUmCwDAhcOedd+qEEHOW12TswunD9IdbH6GX3olOLELMk0yCuhEvnMfiE92IF94hTLw6bc1kLMz/WM6QlywEHk4+qGNPCPllj4nDb2JmfomA5KDDMUD8SpgsUQbaF3VVsYoB15sdTIQQqujIvhkBPEM8zq+//np9nz+AMHZUYohrnT7r6seiSAbNqMv/uq1rbgAAIABJREFUYUDAL0L423deoj/ZcjsdPnPBc6LZD3GFNo01eH4TMsRFRVmdfmxLj/eY3Q8fwd1+3caq2lYEJlffmU7n31gTQn7Zh0WWwLh5WS4/JJPIk6WQXhjVdxtQXp5nm0cOGeJ0QHpZB8krPgjweFFfauoHEKQbLG3ma+A12emrlz8Wcb1IBuMzFqSm3iLANoTnzp3zjLj954USHbljKz1wLFyvYiviiDmTF5ywI2A43o2Aqe8fb3vEn9zwntuwYQPdfffd+gc1/oMboZ1OU2wJIb/s0WCn0gKnoLi5jj0lQXyc6umd5M+OK+hUP8imkzr0ew2TZbRBCGG/aA7+/alUyniR2YVPwMtNHVd47qyWleSPRYw9kQwO/tiRFtojkM1m9efKO6eS9+jlJ26knQeL9H5H+0J3tn9W5M7tsbfffnuonUq+/vWvG+9QSC3dcpJYEkJIBpj9RoHFs7oLdnNeJNg0sGQwzt6QkOqg/kIIvRgVg5+H6gUMtXEn6R8+MFSVCJ5BfhfwxyLGHSQFkgSBQUQA4x3v2G6Jw84cOXLEAwnhBzT/3D7aMvEc/a8eVib54P3felAHe6LJYWfiKkTp1pedzn/5y182yGCvApjYEUJVjRqmZFDtGDyUPDn1MxAxAT788MNGp/aTl1q/MPcxMIUQhtkD8SibbU4xVviHsdPJiQrPnUr+cJ9qOwQbRLdfyPFAS2opCLQQwPjHrxMx/PDDD/VnyovA1O+dPki33Njj2sUfzNORg7+k92r2hM6tRNB8PUe1cKMmHZSxhPefWxWxue2xIoT4IuLJImpkiVXHqF8v9n5Qe7G9HTo16KDX5oHh1X8hhF4hObj5YDLjYPKQ6LFUGc+Sk48+vPxV6SLuw9qtnSSMg4umtGzYEIDdGMY8bMcQrsQq4Xy/S9chAPUDWyboyP/szaP4wumDNJHxN3A1E8JhfPbBG5y8L63GBx+LDSEEGeRJI6pqVCY/ePjgxt5tUOI81MMIp4F78IOEo9PXHndcXLaMCbaSgkOgWS3S7NQO0jaNUzI3T5eawZXttiQ2ucALDRI9PBf8TIDoOUn4QORniLduvJGdlCHXCAJRRODb3/5229hHDE/MP+o8snPnTtqyZUvP6lo4kRz+w5vokZffoVoPdoMX5o/Rn2zVaP9L7/V0v1kSaPf/nnvu0bGIYj/5XSc2memnnFgQQkwSLAGIuoG4GlMNEj+I6UH6OB4SB5zkSZAnLxjKe73MXj8Dw6t7hRB6haSLfJoVyoytqV4xxqYKNfrMRRZBXYoxz88Anh1Odsf5vLoFGWSb2127dtHjjz9u5Im8u3kjq3nJviAQNwROnz5tjH9+lnh7//33616md9xxh/5M2BGpjsc/eIdeemQTJTZM0MHMEYItoqNfJkOHDz5B+2/fuPo8bqGD8x/4SghhJgKhiqTeEIgFIWQ7IXR2N6lbbzB4exdUWKotEz+cVluoyAaRCDKiQggZiQC3F1+gccUWTx93yRLVI8YI8Syz1N/qJY5nA3XHh5XdMpSqZFC1GcQziP/8zNl5IwfYK4EUBXuxkydP0uHDh+m+++4jhByB5yWOe5Oa9NHZPM2mMpQv16jZrFJxdh9t1DQamZih3EKNrnhTkOTiAoHPf/7zxljnMa9uIX3HfzwvHcnfOunfBzR/pEUm1fx625+gl977T5flu7M3RL3EkczFwDFdGgtCiE7GgLabFExtisxfiHBBiKDixoSHHwYrjmHCigO57RdMIYT9ItjD/fU36c9MhHBHZok+iRghhLSfJxarZxvPB9vVQqJuTqpk0O5jEVJHngxRFvLxQrVirksY/0HyXnvtNZ30Ifiw2k7G1bzFdZCg9koUV8pp2n3to3S61rJBaCzM0Hcm8/R/alUq5x6ljdpGSr66LKQw4AFx++23G88S9/nv//7v68egfXrkkUf0fUgT3RDCD+YP0y2Jdm0D5+96+42DdOYDdwTPTV0XFxf1NmLOkdQbArEhhKo6qbemyl1hICCEMAzUm1QrpmgHv8gnjlK5EUY97MvEBxFPKBgjdt7EqgRQlaSrx7t9LIJYspaBy4yzGvndd98lXn2C23PNNdfoTgNo18svv0zvvPOOPvGDABw7dkxXm8OpALZkfI95i3s7puYSZcc0SszMEw+n5fwkTeUvrt62QgspqBZn6E2+oGOGctItAviYgQMibATxcYMPJiTVBAljgYMT87OF0DMwq0AfuyFZcboWIWcwpntx6nTbD4N6fSwIoZU6aVA7ZNDaJYQwvB79tFGjarVuTN7h1aS9ZBA0LC+Flzcke90Snn9ci8kP9sSYFFnVDDLoVOIHEsq2yJwfiGVc0scff6yrglF3/oHsvf/++64n+fn5eZ04giCoJBH42IXqaVZ/TmPos6MXDQkgCOH3CssGhFcqadqc2ECHKs1Vm9Um1SsLVMiXqHvEPCObod/BM8Lr7OJjRiV83PeQ/LF6lM/Du350dFSXFquRKiBNBiE8ePCg7mwSJ6LntK4vvvii/lycPXt26MdPrwBElhBCGsCG4lbqpF4bLPcFi4AQwmDxjkNpPCYwsTl5ecNbklXH9957r7EPMthLmAVoGzg/1AGTaS/5BIk17ALVOoPEebfyxCWdKDDRQDkgz+b06flZGtE0Gj9uTwiplqd9iQQlFxprTkz1IiXHs3RRjAvNkOr/Mb7Z2RCLG7CHPfcHtvgogokFxq5V3zAh/MpXvqJ/ZKkexlwoz6cYS05JVlyug50sfyQ6eacwJrJtRyCyhFD9krdTJ7U3Rf5FEQGe/LGVJAhAmscTHWxrnT7bPI74XjeSQSvUIYFRbRiRL6RlOB6lBPUwFqrndkMd6M2KE+ttuaBqRv5c1rpntlagSU2j61KLthLCZjVHexJjlF1S4hw1ypSayFJVCKEuzYbKF2MNJE4l+cAd4xrkD9hDeu1U+v3ss8/q/fb000/bPlNMNNHHkBDHhex1qyck5OxABvxEgNT7GyyyhFCVEDqdNHqHQe70CwGeyNdNLn4VKPlGGgE2foe6yw35wsT4uc99Tp/0rrrqKvr3f/93T9oJaQtPJpiQMUFbrY3sSWEuMrFSD8MxoBf1cLcJVT0P28NbbrnFIIUgLWsq5DoVpzVKjKapssqbzSrj5cIkJSZyVFX4ICmE8PLCM3Qge4b+o65e4AKYmFxqVvmqAg4m3KzyxbsR49BKque0uZAcqja2VvfhGQJhQvmQMF+4cGEgSOGDDz5ojFcr6akVFnLMGoHIEkJUl0XcQgitOy8OR4UQxqGXgqkjJi1+plX7pm6lYyJjdRBPpl4Hp0fdeLJEGSBCTqUz3erv9jzIIOIpclsxebv1DlVJXi/7sDXj8kFmmLw3a0V67LoE7ctWaIWIVEKIczO3TVLuvEkUqBPCDC0tV6hUHrywNF6ofN2OkV6vh9SRn0F8YPQyNqJ0D69MgrF6/PjxXmGR+1YREEIoQ8FXBIQQ+gpvbDLHpMnqMRjCO/3IAynj+/DSV9W8XhM2kJ4oeCP/4Ac/MMiYX+phJ5M6VMhMCoEL91mzVqZ8OknJQ1nKJkdpbCZHJ7JpOpTOUalqoXJvlGnmtnGans5SJeaCQYw5pypfSOy8HqNePPBQV3O/hjm+nIzBTtegH7gdbt4pXmA4qHkIIRzUno1Iu4QQRqQjQq4GnEHw8oYUjqVN3aqE61TJIKQbOAZVG/KC5IpJSre83JyH2klV8YGQBuWNnM/nDQkOJu5OE2IQ50AYeNJdH86jSUvZfTSVW3MyscRZlxCmqZifpslshT6xvChaBzHO4OWL8C4gw+p4YDxgahDXuLLsuY+2eOmcFMSYRBmqEwn6wek7JVqjLHq1EUIYvT4ZqBoJIRyo7uypMao9sFO1Dl7w6iSskhEQNlZ7YXz5laBGVqWTUCP76Y0MBxJWWyNmIKSqQU2wncqZnJzUSSGwMEu8VJWxbT+s2hAurVSpMD1BmUUom6OTVJUv+pidL5j4YQsCBTMFjIlBsFPD88XthJOJ37apncaX23NmJxI/n8nojNJgaiKEMBich7YUIYRD2/V6wzHxMKnCpOpEood72PkEk7GVdE5V7WJC9yuhLiACKjnwwxsZdoO33nqrXg4maA4s7Xay9ON6TMBbtmzR6waSvuZk0m5DaN0HTaqVszSxLUnF8/9FlxdSdMPmR/Vl70yWhta3e3wUUj9V5av2K/ZByNnLN6oqX68gAbnnDxDYqUblA6TbGFadSLo50niF1bDkI4TQ955uUnWhqE9qhdKSEiS4TuViQT9erNTXatE4T6UCjhdpYXV5qLWT8dsTQhi/PvOyxm6JGwiYnWRQrReu48kMUh0nRFO93+0+Jk9VzQaS66U3MpaTY3ISxThxCFPCUln0KSdHEkK+OMAtxscgq3zdQgnbWw7HAgelv/iLv9A/ur785S8b4w6mGFEOR4Ol6fbu3WvU12vHMreYDuL1Qgh979UmVbNjq4NYWdJpNaaXPglMF6m+us7sSvnA6rUTlPdP8OF7q7kAIYSMxPBt3ap2MYl3kwyqKPaiilbv72Uf0komonh2vVAjY4JmMhjllSRUe8IoSWbcqHzRf4Og8nUzdh944AF9fH3pS18yxhmPN6ttFB1Njh49amgaUGdxInEzApxfK4TQOVY9X/np+ay+5JOmbaNnVt3sGgtM/LAM1QydXQEjbFJltmUwr038M1V7LjE6NwohjE5fBFkTkDu2UYLRdzcJHq53Ihk0twGEDBMEJHbII4iEclRPTZTfjxr5e9/7nt4GkMFu6rKwz+/fv59uu+02vW+79akffcHLuQFv7nuV1EDKpap8/TQn8KN9fuQJaaCKkbr/ne98Rz8H2171Qwc2rOfOnQt9PEIqqErmUUendsh+YDnoeQohDKKHm0uU2dFaf3QsW6Ur1KSludZarq2Hc5QyiN3VrNLxOxL6A6ouDxVEFf0qQwihX8hGO1/ud4zvbhIZECxVMgj1llOygQmfJzIs++X0Pi/Q80qNDNvBuNhwwZ4wiDVjMSZY5Yt+VT8WmNDgQwNjBWMNYyyoDwIvxk7QeXBQd8aOtzfffLOxnjjwg+SNz+G5ClNaaJYKghgKwfd35Agh9Bff1dybVElf33rQJgt0qVmj/L6rSNMm6JmZljp54sQyNWsFmkqAEI7RUXNw10Dq6X0hTAywlTQcCIAosb2ZEzsfTPg8CWGCd5t6DXjtthy7663UyMDAaQJWCBKMyS5sCaCT8n/zm9/oJLyXvrLCBFjxWr6Q+rETEo8JbEEGMJaGUeVrhZnbY3/+539uPGOMK8gg9s0SN5gD8EcWzkNaGKSTk9lWEHXBMy7JfwSEEPqPsV7C7xYP6QvDa1qSSkuv0jSI38QJOr+YoVFNIy15hpZKSUokNNJGM3T+yqpRYUD186sYIYR+IRvdfFmagxe56pFqVeOnnnrKmKjcSAbNebH6EGrqMCRFKLObGhnXwFtXXXbvrbfe0slzmJIYJyTQfM0TTzyh95tbrEXlax65/v9HH+Gj65vf/KbxrIHo8RrZVs8o38PkEZ7vQYxRSJ/VDwJ8CLAzjP9ISQlCCIMaA4jFtbGlNp5Ot8TyY9klajYqdGgEx6cpPd1SF29LV+iTweCDujoHLxWREAY10MItB1/yPIl0czxQPZD7lTZBysTlQpIUpOpYRRz1YHKK+mByg1QL6aabbtLr+MUvftEgrdlsVj8W9NJ0ZoLn9j8CA0OyaSe5AaEQla86MsLZhyp9+/Y186RvfetbxnOC8dntIwzPsErQEJPSa0k2zBCwlCU7v6Be+Jg0Sy7DQXC4ShVCGFh/r9D8gRYhbE1cI3So0qTPqHU8ASmh/ms5ngwIHxRCGNj4Cr8gTBS8sghskTolrySDahksjcZzdPbsWfVU4PsggepECpI4MjJiTMZQ4YG0PvbYY/oxt4QsCtfDhg8SWQQG7qTyxeSuqnzdqNMD77gBKhCrrLTmlNbcwh/l+DBhm8Ju9r2AA+RetS1Enuh3hID54Q9/SHNzczqhw0eC3bhk0vfSSy/p14P8qSFk1HpiXMkYCWcgCiEMEPfGQlJ5QJP05qpT5OXigy1VMQjhphSVg3GWDKTlPEnzyyiQQqWQUBBgyRgIQCc1j5eSQXND2bMZ27ATJlJIK9XJjvchXcOSYbt27dIdSuwm0qgeP3bsGP3BH/zBurbByxfkAc87pEviBBD8KMS442cR4w3Po5n48XrZbmqH/kS/on9B8Hksm7cgdCB7nUgf7mGPcDwjyBc/O4mzm3rKtb0jIISwd+zc31kvUZIlgZOv0kecg+FMolFi5qwSvJoviO8WDzkefmwlBYdAs1qk2akdpG0ap2Runi41/S0bkwVPDJ1e6qpkEJOK16pdTHxcD4w5r/PvBUVIO6xiwF199dV6XeMQbsZMTGEvOTo6Sl/4whd0UgvcQUQkhYsA+oGl9HgO8IxZ2QiilmqA8V5rjT5HmUwWoYJGmSChXD7+M9nDtfKR0Cva/t8nhNB/jIe6BCGEIXR/s0KZMTZBaG2nCjXyywwBkwJPQnj52yVVWgYpgl8EQi0nCuucqoGnmayqW3gYmwlXHP5DDQi1eL/2n3bjRY67Q8BORewuF7l6mBEQQjjMvR9A24UQBgCyuYiLL9A4S6J5mywZq+GYL+/3PwgBExw7AgabOr4GZNBOatFvXXA/iCarjqE6CzuxM8lXv/pVPZ4evLC/8Y1vGHhAmhIHAmiuYyaT0dvQyTwgbOyHoXyM93vvvbdtPEESJ0kQcIuAEEK3iMn1rhAQQugKLm8urr9Jf8ZEcHW7I7Pki+c6Jh4meuhrKxUtyCDHJfRTMqiC51SFrd7jxz7w4bYzTlbbIOO8mYldL/8hHYRUuJuXqh+YSp5rCGB8qc5LnVTEa3fJniBgjYAQQmtc5KhHCAgh9AhIV9k0qVZM0Q7EtAQhnDjqi6MSJBMc0gIG4lYpSMmguXz2jMSEGZYUix0sIE3Ds2D+Pfnkk3ofwUmjF2IW1j0sHRR7MPOoC+6/WUUsYVqCw35QSxJCOKg9G5F2CSEMryM+bdSoWq375qTEfQvSaRXmJQzJoIo2CCtLTxCYN+gEZxIn4TMgQYzTSiViOxj0SGovDyRcVRHjY8zOVKP9TvknCHRGQAhhZ3zkbJ8IMGnAVtLgIACiw6pPOHGYVcVhSgZVlN0Eylbv83Kf7QVhz/i3f/u3dO7cubbsb7nlFn0FE4ShiYPqmKWDYUld28Absj8wheCPHDx/kEDjw0eSIOAFAkIIvUBR8rBFQAihLTSxPnH77bfrhBAOEeYJSZUM4rwTKZmfYMCuCpMnJlI/nVns2qBO4EyiIRXEcZBErBWL4z/5yU8irzYW20G7Xvb/uHlpxE7hnfyvjZQwiAgIIRzEXo1Qm4QQRqgzPKoKJiJ2lMCSU2pSJYcgg1FQZUHFxqQsjBApXDaTQbvtzp07I08IeXkxPNdmqbA6DmTfOwQwfvkDDGNHVMTeYSs5tSMghLAdD/nnMQJCCD0GNOTsVHIFdZVKCkAGOR5hFCSDKlQ8DjGhBhWSA1i98sortGnTJkO9rpLBu+66Sz+OZez4OIJU476wnEU6lfvcc88Z9YQUWJL/CIiK2H+MpYQ1BIQQrmEhez4gwBMxtpLij8DDDz+skwIQPhAXTiCDLAmLimSQ68ZbhLwB8UKMQr9Ux1jTF6o9joOI8u6++26DSDHxYzLIxIo9onH+5MmTkSOEWKeWpcKoqyT/ERAVsf8YSwntCAghbMdD/nmMgBBCjwENMTtIK5gUqCEuoiwZVOFCPbn+Xn2ggBS/8MILBC9mJnvYQq0HZxtgBicS9dzNN9+s/z916pRRPdhhMom85pprIuVcArtBrhva5ReZNsAY8h2MKVERD/kgCKn5QghDAn5YihVCOBg9rYZwgZMGq4rjIBlUe0CVuqDubhNwgBQQ68AySWKyB8kZ7CtVySnnD6kprgMZxD5LBvk8tqgP5wVHE+TTSYUb1LkHH3zQqFcvmKltlP3OCJhVxLB5NTttdc5BzgoCvSMghLB37OROBwgIIXQAUgwusSJSIAdsMwgig8ks6gmTK6RcqC+WkGNi26neaCekgPAIZsKGLVTQkAI6sUlkO0EsX6dKBs3lqg47wDwo0mdXjmo3qEqFzfWW//0hgHGJjwweX3YfDf2VIncLAp0REELYGR852ycCQgj7BDACt6vLr7GqFSSJbQYxiXUiORFoQlsVrNqjXoDJGc4gZikgJmlIASHds5ICqnmY90G4NmzYQIjh142EqurnI0eOhEYKgQETFLS7W73NbZb/zhDAs6SqiPGhEQXvfGe1l6sGCQEhhIPUmxFsixDCCHaKyyqxapTtx0CY1AnMSv3psojAL2dpDEgtyB0mZSwFBqkhkyBsMTljDDuRAnZrhFOcVCkm6oBwNKdPnw6UGP7whz80cEC/o06SvEcAY0L9sBIVsfcYS47OERBC6BwrubIHBIQQ9gBahG7h/gMxASkCMVBJU5wkgyqsFy5coKuvvlonPZ///OcN8gMpICZlTNRhkiCQVFVSCPyxvB0cPOzUu14cX1xcbOtfkVapo8a7fYwt/ihB34qK2DtsJafeERBC2Dt2cqcDBJhQYCspXghAasZeuSy5iLNk8Ne//rUeEkYltJiM8Xv88cdDX1HFanSAhLOEFvWEB7JfamSoiAdNWvW7xRxN6n08Ts+WqvQJNWipmKbdCfT7NB09c351re8VWirAUWiGTteaVl3h2TFREXsGpWTkMQJCCD0GVLJrR0AIYTsecfrHThSQXkBipRKpOEgGUWcOCaMSHahAQXDhBMPxAHE+TIlgt3GB5wj9wAQWamSsfeyFVBB5qCriwZJWNWkpO04JbZpO1xnlFSqntpE2mqHzVz7jg9Ss5iiVr9IV44j3O6Ii9h5TydE7BIQQeoel5GSBgBBCC1BicAjerkw+/uVf/qWNDOJcVJNVYGi0g0PCQDqjJpBGJlpQ0UbZcQJ1RTu4X7D9p3/6p57UyFAN//KXv6S5uTndTpLzHEgVcS1PU4kE7S9eJqZ/VyqzNKJdT88sMv1rUjX3DJ2u8xXqKOl/30pFHAev/P5bLjnECQEhhHHqrRjWVQhh/DoNxIPDyUCCpkoGIVmLUgLBYykgkxpsIQXkwNDd6quGejl79my3y0M/DzUy2qe2F2plrDN89OhRwvrSLDkE8cN/EL8nn3yS9u7d23afmgebBYTeQM8rUKfiQwnSJk7Qss73QP6maEzTaCR1tqUyblYom16gj3zggxij27dvN3AH6V5eXva8lZKhINAvAkII+0VQ7u+IgBDCjvBE8iQ7M0ByhgDJTBpAGMKWoEHSYhUYGnVlKSAIrdvE6nEQqyirjtV2gRiCzKJfQDK4nzptgRMCi+O5hPoSeQxDaiwgxt84Hb/YJGqUaW62RJXiNCUSM/Rmg6ixMEdz5YYhQfQKE3ysqP2BjxRJgkBUERBCGNWeGZB6CSGMV0dCjcUT2He/+11jP0zJIEsBmbRx/UCCnAaG7tYLKIPzRZ5hE99u9bU7D4KHZw7kGMQPbQFpxPG4EF27tvV1vFGh9DaNxrKLdLGYomzlE6L6m/RYIkHJYoWK6SwteehLAqz5wwrjCkRcVMR99aDcHAACQggDAHmYixBCGJ/exyTGqmLeYjILWjKIenBgaNUZhKWAkGz1IgXs1hM8VtHmOKiOu7VHzqsIwLlkjBLaOE3OFFZVx3Au2Uzahu/S9ImLJmeSJtXKOZpKbKPUwprtYWOpSOnxCZotXVz1TlbLaO2Ling9JnIkHgjEghDyl7tsWyEy4ogDJltJ0UYA0iTz2ApKMohJtFNgaJwPInGIF9hNShosBJrVPO1LjFBKUQ3DuWSbNkmnWsaFpgbXqXRgO2nbUjR/mY0Lm7SUy1PVRpooKmIThPI3VghEmhCqInfzRCX/40MOYQA/yBKXZq1MhTSkDxppoyl69fwKNWsLlN2ToJFkjkqV6K/yAJWi+ZnyUzIICR+kgHjGzVJAlBtWYGgVB3zExFF13KwWKT25g7RN45TMLZDPYfViNOHVqZQt0iWVzDWrdCK7QB9ZtqJO5XyJCodGaTQ1v3pNky4Wi2S2UhUVsSWAcjBmCESaEMYMS9fVhTRCvM1cwxbNG5o1KsCTUUtSCdKE+pv041TBVpIQtUaoXpAghrDP8zrZBYaGrRvs3IKSAnZrlyopjd3z2azQ3G6Mw7UPxqlT4tHarc+tz9epXKhQo75AT+/YQakFOJ2sJ4RmFTHGc+zGjTUAcnTIEBBCGFKHs/G+qFJD6gA/iq0VaVrTaDR1igrpFJ2usZrJj8LW5/naa6/Rj370I8pms3ooFqiv+Pfiiy/q++vvIt0JQSUQIIMrKytWl7o6BikgyjdLAdXA0JCsRC2hTqw6hiNLrNLFF2hPop0QaskzNhKwWLUshMquEkIiWinP0uhoms6uXGmTEMLMQX125H0eQjdJkZ4hIITQMyjdZcTrWGLikTQ4CCwXEMpCo/EclskKNjGJUSco8765RpBuqNeADPZD0roFhvbDGcTcJi/+8wcbsIH0Mjap/ibNmAjhjsx5k8NEbFoTckXXCCHRCpXTYzSWPkPlQpEuNBqker3D4QnmBpIEgTgjIIQwhN7DhMtrxGLCkRdJCJ3gV5H1kh7KIjGWobMrwUoI1QDSKsnD/sjIiE78zM3+zne+YxDCXbt2uZYMglCyFFAt001gaHOdovKfVwWBjaMXEtNg2tWkWvFpGmWV8USWzvYv7A2m6pErRSWE1IpfuHszfefeH9M1115rPDdQEcdnfEQOZKlQhBAQQhhCZ8BgXiWEfhrvh9C8IS5yhcqZpyn/aobGYYeXWbQNTeEHSKrEQiVn2IfkD1s1Pf7448akBumiE8kgrukUGNqvkDBqvYPaR1vZ4QVq7zilTxs1qlbrgY6/OOHjrK51WsiX2zCfQp7YAAAUiElEQVT827+823hm8DyJitgZknJVPBBonyHiUefY19IsyYmXBCL28PvWgMsLc5Qq1OgTalAls5sS2hhlKt6vfmDXADeEEMSNSeNXvvKVjhIOSAFhK2XOHyQTDhiDLOGGuphxksDCdiNvEI83qV7J02N7ZqhQqdNlk4r490RFPIidPvRtEkIY8BCADRVPMOr21KlTAddEivMUgXqJUo8p8ckaLW/PTqrjTxsNT227zIRNHV+qhFAlg1//+tfpwoULbVBAMmYXGJpDwsTFFrCtYT3+gUoQWMqHW48Axvw2fPCogdpFRRzzDpXq2yIghNAWGn9OqCEt1Akbk7mkeCKA1QsyE/AuPrMWZqZeofzkqrfn5HNUWlK9aZv00dkM7dmR9nS5LCeEUDVXgCH8+fPnddAREiYKgaGjOAJAfll1jOdX0vAgIF7Ew9PX0lIiIYQBj4JOnqDDJHUJGPboFdesUGqPt4QQIWfgzDE+Pq6vYwtJBv/MZgpQE//jP/6jbUgYEEcnNoXRA9afGsFWjD/gBllF7g968csV72L1AwvPFUwnJAkCg4yAEMIAe1cNZcGTi7rFpBPHlREChHBwivKBEKqkRR1X2L/55psNQqM6NOEcSGOUAkNHtZNZ7Y6Puig/p7JSSX8jCO9pVUUMb3PxIu4PU7k7HggIIQywn2B/ZZ6o1f9Rn2gChGpAi2rSb88UqDi/QKVCmsbHvJUQdgJtdHTUGHvf/OY3da9jbDH+oA5FXEyRgHRCkHR8mExH1rtUVirp3Ildzv74xz82nhM8G8ePH+9yh5wWBAYHASGEAfUl1G8q+bPbH+Q1fwOCOrLFfHo+R4fyNdKjEzbKNOOxyrhTw0FgEGbmjTfeaLsM6k98qMCeEGMSqmXEFRR1cRtMxp/Z2VnjOY4kgZaVSoy+crMDFbFqViEqYjfoybWDgoAQwoB6UvXstCODOI7JWdIgItCkpbl9dKjSbBFCH1TG/aAGAogxympRjEVIDRFzUNIaAsAJZAH4RNIRTFYqWessh3uiInYIlFw28AgIIQyoi9Wvz06EEOo7kc4E1CmBFtOkpdndNLOwGpcwYoRQhQLSEnjTstQQpgyQjInTUwslSFVZdRy9Ze1kpRJ1LHfbFxVxN4Tk/DAhIIQwgN7GRNqJBJrPQVIjafAQqJeSNDpTojp0xo0FOjCWokoz2u2E9ISXcGOpGGIUDvtHC1YuAR74gFteXo5cJ8pKJZ27RFTEnfGRs8OJgBDCAPpdtTsykz+r/1BFRdmLMQDIBrOIZo1K6WmafDRNx/M5mkmm9VUQ4tBYTKCQhrG6dNgdUUCIWYIaSdVxHAZVSHU0q4hhpiNexCF1hhQbKQSEEAbQHdu3b3clIQRJjKLUIQCopIgYIABnCtURBSplOKIMm0oZxII/6LAvKdoIgMQ/9dRTRp+B0MsKUdHuM6ldsAgIIfQZb0wUbG/Ek4eTbWTDWviMl2QfHwQwwcK8AXEMeUxDlTpMjijcdkhMRcoU3bGLjxjVjhvOU5H0Eo8uhFKzIUBACKHPnQxJCk+WbraQukgSBOKCAKSDcERRVcrD4IiCdoMM4tmWCAHRHK34aFEDTYuKOJr9JLUKHwEhhCH1AeINYhLZu3dvSDWQYgUBfxCAVFz9EIJkZpAdUWBbyR97UVjWTlYqaY1rURH783xLroOLgBDCkPpWCGFIwEuxgSGACRlkiWMbsiNKFEiT1yBwGyHZD1V1LCuV6F0rKmKvR7jkNwwICCEMqZeFEIYEvBQbCgJWjig//elPB8YRBe1jW2GozkNLslKJbtcqKuLQRqAUHGMEhBCG1HlCCEMCXooNHQErRxSolOOe4AjGquPQHBaGeKUSURHH/QmS+oeNgBDCkHpACGFIwEuxkUEADhkgUWZHlNDIlAfIcFtgNxlOLFE/Vypp0kdn8zSbylC+XKNms0rF9ARdq2k0MjFDuflluuIBhr1kgTFj9iIetjBIveAm9wgCKgJCCFU0AtwXQhgg2FJU5BGAXeEgOKKoy9qFGTrKj5VKVsqzNLbxUSout2hfY+EA7ZjMU2W5SuXco3RtYiMlizX6JODRhhiYrK6HhBYq+3DIeMANl+IEAY8REELoMaBOsxNC6BQpuW6YEODYhuykgQn+wIEDsYptyCsTwYlmYKRUzSXK7k5QYmaBVrD0IhEt56doMl+l1t8VWnh6hLQNM7TAF/g8cDFWHn74YUNNj0DTZ86c8blUyV4QGFwEhBCG1LdCCEMCXoqNDQJQA0Law0vEwYM3Do4oICpc50FZhrJZ/TntTmg0lq0aEkAQwqlCbZUQEl2pzNKItoEOLfqvOMbYwHhgm018QAwM+Y7NEyoVHTQEhBCG1KNCCEMCXoqNJQKIbTg9PW0QABCtKDuiqCsUDcLyaJ+eT9PmhEbjOXtCSLU8TWgaJedXfB1joiL2FV7JfIgREEIYUucLIQwJeCk21ghACoTYhuy8wbENo+iIgmX8IMFCHSE1jHWqFWgqkaDrUhX6RFEZqxLCZjVH49qt9OzL/y9NatsoNf9fRpMbS0Wa3TNBs6Uq9YqEqIgNOGVHEPAFASGEvsDaPVMhhN0xkisEgU4IsCMKq2ehQoT0KCrkS1UdgxzG29GhTsWHEqSNpmlx1UbQrDJeLkyRNpGji1fqVJq5gRLbUrRQ5x5s0lIuT9Um/3e3FRWxO7zkakGgFwSEEPaCmgf3CCH0AETJQhAg0gkgYhuqjiggYK+//nro+ECayR6wcXd4aNaKlLxWo33ZRV3KpxJCnDswNkm5JTC+OpXzJSoc2kGjqQWq6xLFJl0sFqnWQ4+YVcTw3o43ue4BBLlFEAgAASGEAYBsVYQQQitU5Jgg0B8CUCnDEYVVypAawus3TIcD2DtCdYy6REV62SvKzVqZ8ukkJQ9lKZscpbGZHJ3IpulQOkelKiuD61QuVKhRX6DU6CildJtC94QQWN17772G3SgkwXhvShIEBAF/EBBC6A+uXXMVQtgVIrlAEOgLATtHlKBJGcgoe8MOToy8Ji1l76VJxclkrbNWCSERrZTTtGNHmsoNd4QQ5gCwvWTcJiYmYk+m1/CRPUEgmggIIQypX4QQhgS8FDt0CIAAWjmigHQEldRl7YKQcn388cf09ttv0y9+8Qs6efIkvfvuu543VVUZt2e+RgiJVqg8u5tuS5fobMGZyhihhZgIYisq4nZ05Z8g4BcCQgj9QrZLvkIIuwAkpwUBHxCAcwJWRDE7ogShUual1bD1KqnE7/Dhw3TnnXcabVNJFe/jPK4DSfzwww/7qoYzQggjzzJlxkZoPHmCqh1KFBVxB3DklCAQAAJCCAMA2aoIIYRWqMgxQSA4BOCIAlUkkyW/HVFARrmsfqReIHKPP/64LfHbs2cPPfLII3TkyBE6ffo0vfzyy7odJY5fc801Rh1QFxDj++67j9566y3XwHcihAv5clt4md8tZuiOfTlbQigqYtfwyw2CgOcICCH0HFJnGQohdIaTXCUI+I0ApIMgaOyIAts1vxxRYEPIpHB5edlV05gI8v1M/FBXEL933nmHLl261PWH60ASDx48SMiD89u6dauuYobUsffUpHolT8nxGSosXqa1NUtWqHLKWmUsKuLe0ZY7BQEvERBC6CWaLvISQugCLLlUEAgIATiiQKXMJAnqXayI4pUjCvLhJdfgfawmO5tGEDRIBLlOkP45JX9OCOL7779Px44do507dxploDw/7A7V9gIL9sBG20DI8V6UJAgIAuEgIIQwHNz1Fx9egnv37g2pBlKsICAI2CEAsgJHFDW24YEDB8iOtNnlY3UceTC5QxlIIG733HPPOuI5NzdnqIa9JoJWZHF+fl5XN7NqedeuXfR3f/d3+hrSXq4GA+J93XXXGThgWUKvSLcV5nJMEBAEuiMghLA7Rr5cIRJCX2CVTAUBzxEAEYKqV3VEgZqzH0cUXpf5q1/9qqGqBklUbQtBBkHMoBL2UiJoRQTNx6ykhpCWekHafvzjHxtEEG1mUux5x0mGgoAg4AoBIYSu4PLuYiGE3mEpOQkCQSEARxQmcyAzcESBStlpmpyc1J04QKw2bNjQRoyQH+wXsQoHnDywwgnUuHAOMRO2IP/D3hB1ww9S0l5XCQGBZk9r5AUVsZdSR6d9INcJAoKANQJCCK1x8f2oEELfIZYCBAHfELByRAFZ6kRwzp07p5OqL37xi/Too48aJIvJFm//+7//25BGbtmyhS5cuBAqIQT5hJSS63fq1CnXuFqpiFdWVlznIzcIAoKAfwgIIfQP2445CyHsCI+cFARigwBsAs2OKFh/16xevemmmwxSxeTKaotYgXwcNn1BSgM7lXXLLbfo9YIUsxPxNXecWUV8/Phx8yXyXxAQBCKAgBDCkDpBCGFIwEuxgoBPCIAAQqVsdkSBNBFECypgJnpOtmGris3kEHaM7GwCT+luEj5REfs00CRbQcAnBIQQ+gRst2yFEHZDSM4LAvFFAGSIHVHwrKu2c07I4P79+3WnFTMpC/s/7AmZ2MJ+0i6JitgOGTkuCEQXASGEIfWNEMKQgJdiBYGAEYDa14oEfuELX7A8DrtBePmGTf7sykdAa5YUmsPwQEqq2hvCM7sXm8OAu0iKEwQEASISQhjSMBBCGBLwUqwgEDACiOUHQjg+Pu5IUvjGG29ElgwySfzLv/xLvU1qmBzYFaqSUKjO3dgaBtwtUpwgIAiYEBBCaAIkqL9CCINCWsoRBMJDAKpjVrGqUkKEXEH4Gjij3HjjjW2SQrY5ZPIV1S3ahTZwGBpIB9l+Eu3qZmMYXq9IyYKAIGCFgBBCK1QCOCaEMACQpQhBIGQE2Pt4YmJCDzoNFavZ+xjH7rrrLp0UYjWSuBBCkD84lzAhBNRoG+wHJQkCgkD8EBBCGFKfCSEMCXgpVhAICAEQOxBBPOvd0tTUlE4IoyoNtKrXk08+qddZJIHdelfOCwLxQEAIYUj9JIQwJOClWEEgIATMksBOxW7dulVflcSKeEX12HPPPacTQieEt1Pb5ZwgIAhEAwEhhCH1gxDCkICXYgWBiCHw8ccfG+riqJI/q3r96le/0usNxxJJgoAgEH8EhBCG1IdCCEMCXooVBCKGANYthsNJ1AJRW5FA8zHUG44lkgQBQSD+CAghDKkPhRCGBLwUKwhEDIG5uTmdEBaLxciHmzETwttuu033LI4YpFIdQUAQ6AEBIYQ9gObFLfAsxNc1jM4lCQKCwPAicPr0af1d8Pzzz8eOEMo7bHjHrbR88BAQQhhin8L2xhzpP8TqSNGCgCAQAgIffvihTgixAohZAhfl/2+//bZeb7EhDGHQSJGCgA8ICCH0AVTJUhAQBAQBNwhgKbg9e/bEihC++OKLOiE8c+aMm6bKtYKAIBBRBIQQRrRjpFqCgCAwPAjccccdOrmKskTQXLfDhw/rdV5eXh6ejpKWCgIDjIAQwgHuXGmaICAIxAOBTCajk6v5+fnYSAn37t1LGzdubFupJB5oSy0FAUHACgEhhFaoyDFBQBAQBAJEAI4lWBv42LFjsSGEqC+c4tSl6wKETIoSBAQBjxEQQugxoF2zq1eokEnSvlFNlwiMjE/TM/kyXb7S9U65QBAQBAYUATiWgGDBsSQOaxnDoQT1hUOJEMIBHZTSrKFDQAhhkF3erFJuQiNt0zQ9e6JIpdIpyqUndWI4fvQ8CScMsjOkLEEgWghA/QrHkjgQQl62TqIkRGsMSW0EgX4QEELYD3pu7734Ao1rGj1WqtNnxr0rVElfT4nRLC01jYOyIwgIAkOGwD333KN/HEY9QPX777+vB6NGDEIhhEM2SKW5A42AEMIgu7deomlNI206R/MXG0GWLGUJAoJAxBF46KGHdEL4/7d3tz5qw3Ecx4vZWdzMCdy5gZsDeYogNwEpbm7gjr8A5hAksw0KRepmcZwbwQy3c5vEjbnv8ilrQ8gJHksf3iSX5kgffn39mrtPfk/VEjQKXfuzepPye6vVCsqpQLhYLBKuSvEQQOBQAQLhoVIX2W9jP/0nqykU6ufh0dzu0CbfVkY8vAgwJ0EgtQIKV+o21t+GpHYda+1BjR1UGVmQOrWPGgVH4FUBAuGrLFf+cvPbVs++ecMnc2vbfwBO46ut6DK+MjynRyDZAp7nRYGr2+0mqpVQE0mKxWIQBpldnOzniNIhcIoAgfAUtVOPWb/YavWy1xq4sR+Tj1Yo3Nmn2XpnbOGpF+E4BBBIs0C73d72IDiOaTmaJHQVqwu7UqkE5VIrpia+8EEAgWwJEAhjrM8/zx1765RtsDd75O/3gVUKjrkEwhhrg0shkEyB9XodTdrQeMLlcnnzUNhsNqOQyqvqkvncUCoEzhUgEJ4reMzxm4UN3jvm3D3a52DZGd8m3hdz32k8YcdmDCQ8RpN9EcisgMYTqnv2/v7ebt113O/3ozDY6XRYdzCzTx03lncBAmHcT0C0MPV27OCbh5p96Hg2+8UAwrirgushkGQBjSfU5A21zs3n81hbCXW9Xq9npVIpCoPlcjnJXJQNAQTOFCAQngnI4QgggMC1BDSTN5x5HEcwHI/HVq/XoxDYaDTM9/1gvUF1ZfNBAIHsChAIs1u33BkCCGRAQEFsNxgqsE2n04u1GO63BiqA6npMHMnAw8MtIHCEAIHwCCx2RQABBG4lsB8MNcawWq0GXbuj0cg02eOQGcnaT+MCFSx3u4S1lIy6qfkggEA+BQiE+ax37hoBBFIqEAZDBbhggftwofv/W4W83aCo8KfuZo0B3N9f37muS2tgSp8Fio3AJQUIhJfU5FwIIIBAzALq2tU7hdXNq1nACorhuMPdAKjvFf6GwyHvII65jrgcAmkQIBCmoZYoIwIIIHCkgFoSFRR53/CRcOyOQE4FCIQ5rXhuGwEEEEAAAQQQCAUIhKEEWwQQQAABBBBAIKcCBMKcVjy3jQACCCCAAAIIhAIEwlCCLQIIIIAAAgggkFMBAmFOK57bRgABBBBAAAEEQgECYSjBFgEEEEAAAQQQyKnAP4Liemed9NDtAAAAAElFTkSuQmCC"
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![image.png](attachment:15714f5f-8e8f-48d8-ae7c-2e8b0d3c57a6.png)\n",
    "\n",
    "Using This architecture for function approximator.\n",
    "- Input : States\n",
    "- Output: Action Values [len(n_actions)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "class ANNFuncApprox(nn.Module):\n",
    "    def __init__(self, input_size, hidden_size, output_size):\n",
    "        super().__init__()\n",
    "        self.l1 = nn.Linear(input_size, hidden_size)\n",
    "        self.l2 = nn.Linear(hidden_size, hidden_size)\n",
    "        self.l3 = nn.Linear(hidden_size, output_size)\n",
    "        self.relu = nn.ReLU()\n",
    "    \n",
    "    def forward(self,x):\n",
    "        x = self.relu(self.l1(x))\n",
    "        x = self.relu(self.l2(x))\n",
    "        x = self.l3(x) # Fully connected layer, dont use activator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "class QNetAgent:\n",
    "    def __init__(self, env, LR, start_epsilon, min_epsilon , num_episodes):\n",
    "        self.epsilon = start_epsilon\n",
    "        self.num_episodes = num_episodes\n",
    "        self.min_epsilon = min_epsilon\n",
    "        \n",
    "        # Setting up Neural Network Model\n",
    "        self.sDim = env.observation_space.shape[0]\n",
    "        self.aDim = env.action_space.n\n",
    "        self.model = ANNFuncApprox(self.sDim, 256 ,self.aDim)\n",
    "        self.optimizer = optim.Adam(self.model.parameters(), LR)\n",
    "        self.loss_criterion = nn.MSELoss()\n",
    "        \n",
    "        # Setting up replay memory\n",
    "        self.batch_size = 32\n",
    "        self.memory_size = 1000\n",
    "        self.memory = deque(maxlen = self.memory_size)\n",
    "        \n",
    "        # For Plotting\n",
    "        self.steps_done = 0\n",
    "        self.episode_duration = []\n",
    "        self.avg_episode_duration = []\n",
    "        self.epsilon_history = []\n",
    "        self.mode = \"\"\n",
    "        \n",
    "    def select_action(self, state):\n",
    "        \"\"\" Select Action Based on Epsilon-greedy Approach\"\"\"\n",
    "        self.steps_done +=1\n",
    "        \n",
    "        if np.random.random() <= self.epsilon:\n",
    "            chosen_action = np.random.choice(self.num_actions)\n",
    "        else:\n",
    "            with torch.no_grad():\n",
    "                \n",
    "            chosen_action = torch.argmax(action_values).item()\n",
    "        return chosen_action"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
